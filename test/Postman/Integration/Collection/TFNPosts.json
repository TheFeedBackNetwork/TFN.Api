{
	"variables": [],
	"info": {
		"name": "TFNPosts",
		"_postman_id": "1ddd9df8-4bdf-10fb-6df3-e23aae62173a",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Token [200] - Token for TFN Api (CC flow)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"nbf\": { type: \"integer\" },",
							"        \"exp\": { type: \"integer\" },",
							"        \"iss\": { type: \"string\" },",
							"        \"aud\": { type: \"array\" },",
							"        \"client_id\": { type: \"string\" },",
							"        \"scope\": { type: \"string\" },",
							"        \"sub\": { type: \"string\" },",
							"        \"auth_time\": { type: \"integer\" },",
							"        \"idp\": { type: \"string\" },",
							"        \"email\": { type: \"string\" },",
							"        \"amr\": { type: \"array\" },",
							"        \"jti\": { type: \"string\" },",
							"    },",
							"    \"additionalProperties\": true,",
							"    \"required\": [\"nbf\",\"exp\",\"iss\",\"aud\",\"client_id\",\"scope\",\"sub\",\"auth_time\",\"idp\",\"email\",\"amr\", \"jti\"]",
							"};",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"",
							"",
							"if (tests[\"Is 200\"])",
							"{",
							"    var data = JSON.parse(responseBody);",
							"    ",
							"    var token = \"Bearer \" + data.access_token;",
							"    tests[\"Has Bearer Token\"] = token !== null && token !== \"\";",
							"    postman.setEnvironmentVariable(\"BearerToken\", token);",
							"",
							"    ",
							"    // Decode the token",
							"    var token = data.access_token;",
							"    var decodedToken = atob(token.split(\".\")[1]);",
							"    tests[\"Decoded Token: \" + decodedToken] = true;",
							"    ",
							"    // Validate the decoded token",
							"    var decodedTokenJson = JSON.parse(decodedToken);",
							"    var result = tv4.validateResult(decodedTokenJson, schema);",
							"    console.log(tv4.error);",
							"    //tests[\"Decoded Token valid schema\"] = result.valid;",
							"    ",
							"    // Check each field in the token",
							"    tests[\"Has 'iss'\"] = decodedTokenJson.iss === postman.getEnvironmentVariable(\"TFNStsUrl\"); ",
							"    tests[\"Has 'aud'\"] = decodedTokenJson.aud.indexOf(postman.getEnvironmentVariable(\"TFNStsUrl\") + \"/resources\") > -1 ;",
							"    tests[\"Has 'client_id'\"] = decodedTokenJson.client_id === postman.getEnvironmentVariable(\"TFNFrontendClient\");",
							"",
							"}",
							"",
							"// Clear test environment variables"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Set variables for this test",
							"postman.setEnvironmentVariable(\"username\", \"postman@whereismytransport.com\");",
							"postman.setEnvironmentVariable(\"authority\", \"2CF0141F-B3DC-489B-86B8-DD0727C14497\");",
							"postman.setEnvironmentVariable(\"scope\", \"writerapi:agencies:read\");",
							"postman.setEnvironmentVariable(\"product\", [\"messenger\",\"writer\"]);",
							"postman.setEnvironmentVariable(\"amr\", [\"password\"]);"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNStsUrl}}/connect/token",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{TFNFrontendClient}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "posts.read",
							"type": "text"
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Token [200] - Token for Bob",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"nbf\": { type: \"integer\" },",
							"        \"exp\": { type: \"integer\" },",
							"        \"iss\": { type: \"string\" },",
							"        \"aud\": { type: \"array\" },",
							"        \"client_id\": { type: \"string\" },",
							"        \"scope\": { type: \"string\" },",
							"        \"sub\": { type: \"string\" },",
							"        \"auth_time\": { type: \"integer\" },",
							"        \"idp\": { type: \"string\" },",
							"        \"email\": { type: \"string\" },",
							"        \"amr\": { type: \"array\" },",
							"        \"jti\": { type: \"string\" },",
							"    },",
							"    \"additionalProperties\": false,",
							"    \"required\": [\"nbf\",\"exp\",\"iss\",\"aud\",\"client_id\",\"scope\",\"sub\",\"auth_time\",\"idp\",\"email\",\"amr\", \"jti\"]",
							"};",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"",
							"if (tests[\"Is 200\"])",
							"{",
							"    var data = JSON.parse(responseBody);",
							"    ",
							"    var token = \"Bearer \" + data.access_token;",
							"    tests[\"Has Bearer Token\"] = token !== null && token !== \"\";",
							"    postman.setEnvironmentVariable(\"BearerToken\", token);",
							"    postman.setEnvironmentVariable(\"BobBearerToken\", token);",
							"    // Decode the token",
							"    var token = data.access_token;",
							"    var decodedToken = atob(token.split(\".\")[1]);",
							"    tests[\"Decoded Token: \" + decodedToken] = true;",
							"    ",
							"    // Validate the decoded token",
							"    var decodedTokenJson = JSON.parse(decodedToken);",
							"    var result = tv4.validateResult(decodedTokenJson, schema);",
							"    console.log(tv4.error);",
							"    postman.setEnvironmentVariable(\"BobId\", decodedTokenJson.sub);",
							"    // Check each field in the token",
							"    tests[\"Is Bob\"] = decodedTokenJson.preferred_username == \"bob\";",
							"    tests[\"Has 'iss'\"] = !!decodedTokenJson.iss;",
							"    tests[\"Has 'aud'\"] = !!decodedTokenJson.aud;",
							"    tests[\"Has 'client_id'\"] = !!decodedTokenJson.client_id",
							"    tests[\"Has 'scope'\"] = !!decodedTokenJson.scope;",
							"    tests[\"Has 'idp'\"] = !!decodedTokenJson.idp;",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Set variables for this test",
							"postman.setEnvironmentVariable(\"username\", \"postman@whereismytransport.com\");",
							"postman.setEnvironmentVariable(\"authority\", \"2CF0141F-B3DC-489B-86B8-DD0727C14497\");",
							"postman.setEnvironmentVariable(\"scope\", \"writerapi:agencies:read\");",
							"postman.setEnvironmentVariable(\"product\", [\"messenger\",\"writer\"]);",
							"postman.setEnvironmentVariable(\"amr\", [\"password\"]);"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNStsUrl}}/connect/token",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{TFNPostmanClient}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "posts.read posts.write posts.edit posts.delete credits.read credits.edit users.read ip.read profile openid",
							"type": "text"
						},
						{
							"key": "username",
							"value": "bob",
							"type": "text"
						},
						{
							"key": "password",
							"value": "lol123",
							"type": "text"
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Token [200] - Token for Alice",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"nbf\": { type: \"integer\" },",
							"        \"exp\": { type: \"integer\" },",
							"        \"iss\": { type: \"string\" },",
							"        \"aud\": { type: \"array\" },",
							"        \"client_id\": { type: \"string\" },",
							"        \"scope\": { type: \"string\" },",
							"        \"sub\": { type: \"string\" },",
							"        \"auth_time\": { type: \"integer\" },",
							"        \"idp\": { type: \"string\" },",
							"        \"email\": { type: \"string\" },",
							"        \"amr\": { type: \"array\" },",
							"        \"jti\": { type: \"string\" },",
							"    },",
							"    \"additionalProperties\": false,",
							"    \"required\": [\"nbf\",\"exp\",\"iss\",\"aud\",\"client_id\",\"scope\",\"sub\",\"auth_time\",\"idp\",\"email\",\"amr\", \"jti\"]",
							"};",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"",
							"if (tests[\"Is 200\"])",
							"{",
							"    var data = JSON.parse(responseBody);",
							"    ",
							"    var token = \"Bearer \" + data.access_token;",
							"    tests[\"Has Bearer Token\"] = token !== null && token !== \"\";",
							"    postman.setEnvironmentVariable(\"BearerToken\", token);",
							"    postman.setEnvironmentVariable(\"AliceBearerToken\", token);",
							"    // Decode the token",
							"    var token = data.access_token;",
							"    var decodedToken = atob(token.split(\".\")[1]);",
							"    tests[\"Decoded Token: \" + decodedToken] = true;",
							"    ",
							"    // Validate the decoded token",
							"    var decodedTokenJson = JSON.parse(decodedToken);",
							"    var result = tv4.validateResult(decodedTokenJson, schema);",
							"    console.log(tv4.error);",
							"    postman.setEnvironmentVariable(\"AliceId\", decodedTokenJson.sub);",
							"    // Check each field in the token",
							"    tests[\"Has 'iss'\"] = decodedTokenJson.iss === postman.getEnvironmentVariable(\"TFNStsUrl\"); ",
							"    tests[\"Has 'aud'\"] = decodedTokenJson.aud.indexOf(postman.getEnvironmentVariable(\"TFNStsUrl\") + \"/resources\") > -1 ;",
							"    tests[\"Has 'client_id'\"] = decodedTokenJson.client_id === postman.getEnvironmentVariable(\"TFNPostmanClient\");",
							"    tests[\"Has 'scope'\"] = decodedTokenJson.scope = postman.getEnvironmentVariable(\"scope\");",
							"    tests[\"Has 'idp'\"] = decodedTokenJson.idp = \"idsrv\";",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Set variables for this test",
							"postman.setEnvironmentVariable(\"username\", \"postman@whereismytransport.com\");",
							"postman.setEnvironmentVariable(\"authority\", \"2CF0141F-B3DC-489B-86B8-DD0727C14497\");",
							"postman.setEnvironmentVariable(\"scope\", \"writerapi:agencies:read\");",
							"postman.setEnvironmentVariable(\"product\", [\"messenger\",\"writer\"]);",
							"postman.setEnvironmentVariable(\"amr\", [\"password\"]);"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNStsUrl}}/connect/token",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{TFNPostmanClient}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "posts.read posts.write posts.edit posts.delete credits.read users.read ip.read profile openid",
							"type": "text"
						},
						{
							"key": "username",
							"value": "alice",
							"type": "text"
						},
						{
							"key": "password",
							"value": "lol123",
							"type": "text"
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Users [204] - Set Bobs Credits to 100",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 204\"] = responseCode.code === 204;",
							"postman.setEnvironmentVariable(\"BobsCredits\", 100);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{BobId}}/100",
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Users [204] - Set Alices Credits to 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 204\"] = responseCode.code === 204;",
							"postman.setEnvironmentVariable(\"AlicesCredits\", 5);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{AliceId}}/5",
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Users [200] - Get Bobs Credits",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": { type: \"string\" },",
							"        \"userId\": { type: \"string\" },",
							"        \"username\": { type: \"string\" },",
							"        \"totalCredits\": { type: \"integer\" }",
							"    },",
							"    \"additionalProperties\": true,",
							"    \"required\": [\"totalCredits\",\"userId\",\"id\",\"username\"]",
							"};",
							"",
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"var result = tv4.validateResult(data, schema);",
							"tests[\"Valid schema\"] = result.valid;",
							"",
							"postman.setEnvironmentVariable(\"BobsCredits\", data.totalCredits);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{BobId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Credits [200] - Get Alices Credits",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": { type: \"string\" },",
							"        \"userId\": { type: \"string\" },",
							"        \"username\": { type: \"string\" },",
							"        \"totalCredits\": { type: \"integer\" }",
							"    },",
							"    \"additionalProperties\": true,",
							"    \"required\": [\"totalCredits\",\"userId\",\"id\",\"username\"]",
							"};",
							"",
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"var result = tv4.validateResult(data, schema);",
							"tests[\"Valid schema\"] = result.valid;",
							"",
							"postman.setEnvironmentVariable(\"AlicesCredits\", data.totalCredits);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{AliceId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [201] - Bob Add Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"BobPostId\", data.id);",
							"",
							"tests[\"Is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"This is my new track foo on my soundcloud bobdj\",\n  \"trackUrl\" : \"http://soundcloud.com/bobdj/foo\",\n  \"tags\" : [\"dub\",\"140\"],\n  \"genre\" : \"Dubstep\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Credits [200] - Get Bobs Credit Drop",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": { type: \"string\" },",
							"        \"userId\": { type: \"string\" },",
							"        \"username\": { type: \"string\" },",
							"        \"totalCredits\": { type: \"integer\" }",
							"    },",
							"    \"additionalProperties\": true,",
							"    \"required\": [\"totalCredits\",\"userId\",\"id\",\"username\"]",
							"};",
							"",
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"var result = tv4.validateResult(data, schema);",
							"tests[\"Valid schema\"] = result.valid;",
							"bobsCredits = postman.getEnvironmentVariable(\"BobsCredits\"); ",
							"tests[\"Credit Drop\"] = data.totalCredits < bobsCredits;",
							"postman.setEnvironmentVariable(\"BobsCredits\", data.totalCredits);"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{BobId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [201] - Alice Add Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"AlicePostId\", data.id);",
							"",
							"tests[\"Is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"This is my test post please ignore\",\n  \"trackUrl\" : \"http://soundcloud.com/alicedj/bar\",\n  \"tags\" : [\"goa\",\"asot\"],\n  \"genre\" : \"Trance\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Credits [200] - Get Alices Credit Drop",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": { type: \"string\" },",
							"        \"userId\": { type: \"string\" },",
							"        \"username\": { type: \"string\" },",
							"        \"totalCredits\": { type: \"integer\" }",
							"    },",
							"    \"additionalProperties\": true,",
							"    \"required\": [\"totalCredits\",\"userId\",\"id\",\"username\"]",
							"};",
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"var result = tv4.validateResult(data, schema);",
							"tests[\"Valid schema\"] = result.valid;",
							"alicesCredits = postman.getEnvironmentVariable(\"AlicesCredits\"); ",
							"tests[\"Credit Drop\"] = data.totalCredits < alicesCredits;",
							"postman.setEnvironmentVariable(\"AlicesCredits\", data.totalCredits);"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{AliceId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [201] - Alice Comments To Bob",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"AliceCommentId\", data.id);",
							"",
							"tests[\"Is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{BobPostId}}/comments",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"foo bar baz bob foo bar baz!\",\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [201] - Bob Comments To Alice",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"BobCommentId\", data.id);",
							"",
							"tests[\"Is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"foo bar alice foo bar!\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [201] - Alice Scores  Bobs Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"AliceScoreId\", data.id);",
							"",
							"tests[\"Is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments/{{BobCommentId}}/scores",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"foo bar baz bob foo bar baz!\",\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Credits [200] - Get Bobs Credit Rise",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": { type: \"string\" },",
							"        \"userId\": { type: \"string\" },",
							"        \"username\": { type: \"string\" },",
							"        \"totalCredits\": { type: \"integer\" }",
							"    },",
							"    \"additionalProperties\": true,",
							"    \"required\": [\"totalCredits\",\"userId\",\"id\",\"username\"]",
							"};",
							"",
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"var result = tv4.validateResult(data, schema);",
							"tests[\"Valid schema\"] = result.valid;",
							"bobsCredits = postman.getEnvironmentVariable(\"BobsCredits\"); ",
							"tests[\"Credit Drop\"] = data.totalCredits > bobsCredits;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/credits/users/{{BobId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [400] - Alice sends another score",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments/{{BobCommentId}}/scores",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"foo bar baz bob foo bar baz!\",\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [200] - Alice removes score on bob",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments/{{BobCommentId}}/scores/{{AliceScoreId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\" : \"foo bar baz bob foo bar baz!\",\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [404] - Alice removes score that was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"tests[\"Is 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments/{{BobCommentId}}/scores/{{AliceScoreId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [403] - Alice tries to delete bobs comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 403\"] = responseCode.code === 403;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments/{{BobCommentId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [403] - Alice tries to delete bobs post",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 403\"] = responseCode.code === 403;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{BobPostId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{AliceBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [200] - Bob deletes his comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{AlicePostId}}/comments/{{BobCommentId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [200] - Bob deletes his post",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"tests[\"Is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts/{{BobPostId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BobBearerToken}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [401] - Get All",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 401\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts",
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Posts [200] - Get All",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{TFNApiUrl}}/posts",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{BearerToken}}",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}